stages:
  - format # List of stages for jobs, and their order of execution
  - build
  - deploy

variables:
  FLUTTER_VERSION: "3.24.3"

format:
  image: ghcr.io/cirruslabs/flutter:$FLUTTER_VERSION
  stage: format
  before_script:
    - flutter doctor -v
  script:
    - echo "Verify the code dart code is formated"
    - dart format --set-exit-if-changed lib
  tags:
    - saas-linux-small-amd64

# source: https://medium.com/kinandcartacreated/setup-a-flutter-ci-cd-with-gitlab-ci-part-3-8e67c91c6da7
build-ios: # This job runs in the build stage, which runs first.
  stage: build
  before_script:
    - fvm use $FLUTTER_VERSION
    - fvm flutter doctor -v
    - fvm flutter pub get
    - fvm flutter clean
  script:
    - echo "Compiling the code for iOS..."
    - fvm flutter build ipa
  after_script:
    - mv build/ios/ipa/AELF.ipa aelf-$CI_COMMIT_SHORT_SHA.ipa
  artifacts:
    name: aelf-$CI_COMMIT_SHORT_SHA.ipa
    paths:
      - aelf-$CI_COMMIT_SHORT_SHA.ipa
  tags:
    - aelf
    - macos

build-android:
  image: ghcr.io/cirruslabs/flutter:$FLUTTER_VERSION
  stage: build
  before_script:
    - flutter doctor -v
    - flutter pub get
    - flutter clean
  script:
    - echo "Compiling the code for Android..."
    - flutter build apk
  after_script:
    - mv build/app/outputs/apk/release/app-release.apk aelf-flutter-"$CI_COMMIT_SHORT_SHA".apk
  artifacts:
    name: aelf-flutter-$CI_COMMIT_SHORT_SHA
    paths:
      - aelf-flutter-$CI_COMMIT_SHORT_SHA.apk
  tags:
    - saas-linux-small-amd64

deploy-ios:
  stage: deploy
  #  dependencies:
  #  - build-ios
  needs: ["build-ios"]
  script:
    - echo "Uploading to testflight..."
    - xcrun altool --upload-app --type ios -f *.ipa --username $ci_username_apple --password $ci_pwd_apple
  tags:
    - macos
    - aelf
  rules:
    - if: $CI_COMMIT_TAG != null
